trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
  - stage: LighthousePerformanceTests
    displayName: 'Lighthouse Performance Testing'
    jobs:
      - job: RunLighthouseTests
        displayName: 'Run Lighthouse Performance Tests'
        timeoutInMinutes: 30

        steps:
          # Node.js, Chrome, Java, Maven steps (same as before)

          - script: |
              mkdir -p lighthouse-reports
              chmod 755 lighthouse-reports
            displayName: 'Create Lighthouse Reports Directory'

          # Run tests and generate reports (same as before)

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: true
              testRunTitle: 'Lighthouse Performance Tests'
            condition: always()

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Lighthouse Reports'
            inputs:
              pathToPublish: 'lighthouse-reports'
              artifactName: 'lighthouse-reports'
              publishLocation: 'Container'
            condition: always()

          - script: |
              if [ -d "lighthouse-reports" ]; then
                npm install -g allure-commandline
                allure generate lighthouse-reports --clean -o $(Build.ArtifactStagingDirectory)/allure-results
                echo "Allure report generated successfully"
              else
                echo "No lighthouse-reports directory found, skipping report generation"
                mkdir -p $(Build.ArtifactStagingDirectory)/allure-results
                echo "No test results available" > $(Build.ArtifactStagingDirectory)/allure-results/index.html
              fi
            displayName: 'Generate Allure Report'
            condition: always()

          - script: |
              echo "Listing contents of allure-results directory"
              ls -R $(Build.ArtifactStagingDirectory)/allure-results
            displayName: 'List Contents of Allure Results Directory'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Allure Report'
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/allure-results'
              artifactName: 'allure-report'
              publishLocation: 'Container'
            condition: always()
