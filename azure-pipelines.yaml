trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
  - stage: LighthousePerformanceTests
    displayName: 'Lighthouse Performance Testing'
    jobs:
      - job: RunLighthouseTests
        displayName: 'Run Lighthouse Performance Tests'
        timeoutInMinutes: 30

        steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - script: |
              npm install -g lighthouse
              lighthouse --version
            displayName: 'Install Lighthouse CLI'

          - script: |
              wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
              sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
              sudo apt-get update
              sudo apt-get install -y google-chrome-stable
              google-chrome --version
            displayName: 'Install Chrome Browser'

          # Changed to Java 17 or 21 (more commonly available and compatible)
          - task: JavaToolInstaller@0
            displayName: 'Install Java 17'
            inputs:
              versionSpec: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'

          - task: Cache@2
            displayName: 'Cache Maven Dependencies'
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)

          - task: Maven@4
            displayName: 'Download Maven Dependencies'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'dependency:resolve'
              options: '$(MAVEN_OPTS)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'  # Updated to match Java version

          - script: |
              mkdir -p lighthouse-reports
              chmod 755 lighthouse-reports
            displayName: 'Create Lighthouse Reports Directory'

          - task: Maven@4
            displayName: 'Run Lighthouse Performance Tests'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: '-Dtest=*Performance* $(MAVEN_OPTS) -Dheadless=true'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'  # Updated to match Java version
            env:
              CI: 'true'
              LIGHTHOUSE_PATH: 'lighthouse'
              CHROME_PATH: '/usr/bin/google-chrome'

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: true
              testRunTitle: 'Lighthouse Performance Tests'
            condition: always()

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Lighthouse Reports'
            inputs:
              pathToPublish: 'lighthouse-reports'
              artifactName: 'lighthouse-reports'
              publishLocation: 'Container'
            condition: always()

          - script: |
              if [ -d "allure-results" ]; then
                npm install -g allure-commandline
                allure generate allure-results --clean -o allure-report
                echo "Allure report generated successfully"
              else
                echo "No allure-results directory found, skipping report generation"
                mkdir -p allure-report
                echo "No test results available" > allure-report/index.html
              fi
            displayName: 'Generate Allure Report'
            condition: always()

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Allure Report'
            inputs:
              pathToPublish: 'allure-report'
              artifactName: 'allure-report'
              publishLocation: 'Container'
            condition: always()