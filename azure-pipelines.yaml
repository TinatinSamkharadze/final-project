trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
  - stage: DebugTests
    displayName: 'Debug Test Execution'
    jobs:
      - job: DebugRun
        displayName: 'Debug Run'
        timeoutInMinutes: 30

        steps:
          # Install Java 17
          - task: JavaToolInstaller@0
            displayName: 'Install Java 17'
            inputs:
              versionSpec: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'

          # Cache Maven Dependencies
          - task: Cache@2
            displayName: 'Cache Maven Dependencies'
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)

          # Check Maven and Java versions
          - script: |
              echo "=== Environment Check ==="
              java -version
              mvn -version
              echo "=== Project files ==="
              ls -la
              echo "=== POM.xml content ==="
              cat pom.xml
              echo "=== TestNG.xml content ==="
              cat testng.xml || echo "No testng.xml found"
            displayName: 'Environment Check'

          # Validate Maven project
          - script: |
              echo "=== Maven validate ==="
              mvn validate $(MAVEN_OPTS)
              echo "Validate exit code: $?"
            displayName: 'Maven Validate'

          # Clean only
          - script: |
              echo "=== Maven clean ==="
              mvn clean $(MAVEN_OPTS)
              echo "Clean exit code: $?"
            displayName: 'Maven Clean'

          # Compile only
          - script: |
              echo "=== Maven compile ==="
              mvn compile $(MAVEN_OPTS)
              echo "Compile exit code: $?"
              echo "=== Check compiled classes ==="
              find target -name "*.class" -type f || echo "No compiled classes found"
            displayName: 'Maven Compile'

          # Test compile only
          - script: |
              echo "=== Maven test-compile ==="
              mvn test-compile $(MAVEN_OPTS)
              echo "Test-compile exit code: $?"
              echo "=== Check test classes ==="
              find target/test-classes -name "*.class" -type f || echo "No test classes found"
            displayName: 'Maven Test Compile'

          # Try to run tests
          - script: |
              echo "=== Maven test ==="
              mvn test $(MAVEN_OPTS) -Dtest=ge.tbc.testautomation.LighthouseTests
              echo "Test exit code: $?"
              echo "=== Check results ==="
              if [ -d "target/surefire-reports" ]; then
                echo "Surefire reports found:"
                ls -la target/surefire-reports/
                find target/surefire-reports -name "*.xml" -exec cat {} \;
              else
                echo "No surefire reports found"
              fi
            displayName: 'Maven Test Run'
            continueOnError: true

          # Final status check
          - script: |
              echo "=== Final Status ==="
              echo "Target directory:"
              ls -la target/ || echo "No target directory"
              echo "=== All XML files ==="
              find . -name "*.xml" -type f || echo "No XML files found"
              echo "=== Maven logs ==="
              find . -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; || echo "No log files found"
            displayName: 'Final Status Check'
            condition: always()